<?php
/**
 * Copyright (c) 2017 Timo Ebel
 *
 * This work is licensed under the terms of the MIT license.
 * For a copy, see <https://opensource.org/licenses/MIT> or the LICENSE file included in this project.
 */

namespace Rekhyt\PhpDependencyChecker\Test\Unit\Vulnerability\Filter;

use Rekhyt\PhpDependencyChecker\Vulnerability\Entity\Vulnerability;
use Rekhyt\PhpDependencyChecker\Vulnerability\Filter\VulnerabilityListFilterPackageExceptionList;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\PackageName;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\PackageVersion;

class VulnerabilityListFilterPackageExceptionListTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @param Vulnerability[] $expectedList
     * @param PackageName[]   $packageExceptions
     * @param Vulnerability[] $originalList
     *
     * @dataProvider provideTestFilterFixtures
     */
    public function testFilter(array $expectedList, array $packageExceptions, array $originalList)
    {
        $subjectUnderTest = new VulnerabilityListFilterPackageExceptionList($packageExceptions);

        $this->assertEquals(
            $expectedList,
            $subjectUnderTest->filter($originalList)
        );
    }

    /**
     * @return array
     */
    public function provideTestFilterFixtures()
    {
        $defaultVulnerabilityList = [
            new Vulnerability(
                new PackageName('some/package'),
                new PackageVersion('1.1.3'),
                []
            ),
            new Vulnerability(
                new PackageName('some-other/package'),
                new PackageVersion('1.2.4'),
                []
            ),
        ];

        $defaultExceptionList = [new PackageName('phpmailer/phpmailer'), new PackageName('stuff/lolz')];

        return [
            'empty vulnerability list, empty package exception list' => [
                [],
                [],
                [],
            ],

            'empty vulnerability list, non-empty package exception list' => [
                [],
                $defaultExceptionList,
                [],
            ],

            'non-empty vulnerability list, non-empty package exception list, no matches' => [
                $defaultVulnerabilityList,
                $defaultExceptionList,
                $defaultVulnerabilityList,
            ],

            'non-empty vulnerability list, non-empty package exception list, one match' => [
                $defaultVulnerabilityList,
                $defaultExceptionList,
                array_merge(
                    $defaultVulnerabilityList,
                    [new Vulnerability(new PackageName('stuff/lolz'), new PackageVersion('1.3.2'), [])]
                ),
            ],

            'non-empty vulnerability list, non-empty package exception list, all match' => [
                [],
                [new PackageName('some/package'), new PackageName('some-other/package')],
                $defaultVulnerabilityList,
            ],
        ];
    }
}
