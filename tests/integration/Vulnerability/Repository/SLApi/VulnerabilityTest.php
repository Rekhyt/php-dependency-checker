<?php
/**
 * Copyright (c) 2017 Timo Ebel
 *
 * This work is licensed under the terms of the MIT license.
 * For a copy, see <https://opensource.org/licenses/MIT> or the LICENSE file included in this project.
 */

namespace Rekhyt\PhpDependencyChecker\Test\Integration\Vulnerability\Repository\SLApi;

use GuzzleHttp\Client;
use Rekhyt\PhpDependencyChecker\Vulnerability\Repository\SLApi\Vulnerability;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\ApiEndpoint;
use Rekhyt\PhpDependencyChecker\Vulnerability\ValueObject\ComposerLockFileContents;

class VulnerabilityTest extends \PHPUnit_Framework_TestCase
{
    /** @var Vulnerability */
    private $subjectUnderTest;

    /** @var Client */
    private $client;

    public function setUp()
    {
        $this->client           = new Client();
        $this->subjectUnderTest = new Vulnerability(
            $this->client,
            new ApiEndpoint('http://security.sensiolabs.org/check_lock')
        );
    }

    /**
     * @throws \Rekhyt\PhpDependencyChecker\Vulnerability\Repository\Provider\FetchingVulnerabilitiesFailedException
     */
    public function testDefaultEndpointIsReachable()
    {
        $response = $this->subjectUnderTest->getAllByComposerLockFileContents(
            new ComposerLockFileContents(file_get_contents(__DIR__ . '/../../../../fixtures/composer-secure.lock.json'))
        );

        $this->assertEquals([], $response);
    }

    /**
     * @throws \Rekhyt\PhpDependencyChecker\Vulnerability\Repository\Provider\FetchingVulnerabilitiesFailedException
     */
    public function testKnownVulnerabilityIsFound()
    {
        $response = $this->subjectUnderTest->getAllByComposerLockFileContents(
            new ComposerLockFileContents(file_get_contents(__DIR__ . '/../../../../fixtures/composer-vulnerable.lock.json'))
        );

        $this->assertNotEmpty($response);
    }
}
